<style lang="scss">
.container {
  background-color: #e5e5e5;
}

.info {
  background-color: white;

  height: 172rpx;
  width: 100%;

  box-sizing: border-box;
  padding: 0 32rpx;

  display: flex;
  align-items: center;
  flex-flow: row nowrap;
  box-shadow: 0 0 16rpx #ccc;

  image {
    width: 96rpx;
    height: 96rpx;
    border-radius: 50%;
  }

  .info-nickname {
    font-size: 42rpx;
    margin-bottom: 16rpx;

    text {
      overflow: hidden;
      max-width: 380rpx;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    image {
      width: 48rpx;
      height: 48rpx;
      position: relative;
      top: 8rpx;
      margin-left: 16rpx;
    }
  }

  .info-intro {
    color: #888;
    font-size: 32rpx;
    text {
      overflow: hidden;
      max-width: 380rpx;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }
}

.main {
  margin-top: 32rpx;
  height: calc(100% - 204rpx);
  width: 100%;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: auto;
  position: relative;

  .main-item {
    background-color: white;

    padding: 24rpx 48rpx 24rpx 18rpx;

    transition: background-color 0.3s;

    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: center;

    image {
      width: 48rpx;
      height: 48rpx;
      position: relative;
      top: 10rpx;
      margin-right: 16rpx;
    }

    &:active {
      background-color: #f5f5f5;
    }

    &:not(:last-child) {
      border-bottom: 1px solid #ccc;
    }
  }
}
</style>
<template>
  <view class="container">

    <view class="info" @tap="handle2Login">
      <view>
        <image src="{{userAvatar}}" mode="aspectFill"></image>
      </view>
      <view style="flex: 1; margin-left: 16rpx;">
        <view class="info-nickname">
          <text wx:if="{{userCheck}}">{{userNickname}}</text>
          <text wx:if="{{!userCheck}}">您还未登录</text>
          <image src="/assets/icons/male.png" wx:if="{{userCheck && userSex === 1}}"/>
          <image src="/assets/icons/female.png" wx:if="{{userCheck && userSex === 2}}"/>  
        </view>
        <view class="info-intro">
          <text wx:if="{{userCheck}}">{{userIntro}}</text>
        </view>
      </view>
    </view>

    <scroll-view class="main" wx:if="{{userCheck}}" scroll-y>
      <view class="main-item" @tap="handle2Bill">
        <view>
          <image src="/assets/icons/bill.png" />
          <text>账单</text>
        </view>
        <text style="color: #47B248;"> (账户余额: ￥{{userBalance}}) </text>
      </view>
      <view class="main-item" @tap="handle2Setting">
        <view>
          <image src="/assets/icons/setting.png" />
          <text>设置</text>
        </view>
      </view>
    </scroll-view>

  </view>
</template>

<script>
import wepy from 'wepy';

import { connect } from 'wepy-redux';

import { getStore } from 'wepy-redux';

import { BASE_API } from '@/const/config';

import { asyncQueryBalance } from '@/store/actions';

@connect(
  {
    userId(state) {
      return state.user.id;
    },
    userCheck(state) {
      return state.user.check;
    },
    userBalance(state) {
      return state.user.balance;
    },
    userNickname(state) {
      return state.user.userInfo.nickname;
    },
    userIntro(state) {
      return state.user.userInfo.intro || '没有自我介绍~';
    },
    userSex(state) {
      return state.user.userInfo.sex || 0;
    },
    userAvatar(state) {
      const { avatar } = state.user.userInfo;

      return avatar ? BASE_API + avatar : '/assets/imgs/avatar.png';
    }
  },
  {}
)
export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: '个人中心'
  };
  components = {};

  mixins = [];

  data = {};

  computed = {};

  methods = {
    handle2Login() {
      if (this.userCheck) {
        return;
      }

      wepy.navigateTo({
        url: '/pages/login'
      });
    },
    handle2Setting() {
      wepy.navigateTo({
        url: '/pages/setting'
      });
    },
    handle2Bill() {
      wepy.navigateTo({
        url: '/pages/bill'
      });
    }
  };

  events = {};

  loadBalance() {
    getStore()
      .dispatch(asyncQueryBalance(wepy.getStorageSync('token')))
      .then(res => {
        if (res.error) {
          wepy.showToast({
            icon: 'none',
            title: res.payload.message
          });
        }
      });
  }

  onShow() {
    if (!this.userCheck) {
      return;
    }
    this.loadBalance();
  }

  onLoad() {}
}
</script>
