<style lang="scss">
.tips-login-needed {
  position: absolute;
  width: 100%;
  height: calc(100%);
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  left: 0;
  top: 0;

  #loginBtn {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-flow: row nowrap;
    width: 280rpx;
    height: 280rpx;
    border: 1px dashed #ccc;

    font-size: 180rpx;

    position: relative;
    top: -72rpx;
  }
}

.toolbar {
  height: 96rpx;
  width: 100%;

  box-shadow: 0 0 16rpx #ccc;

  display: flex;
  flex-flow: row nowrap;

  .toolbar-item {
    flex: 1;
    height: 96rpx;
    line-height: 96rpx;
    text-align: center;

    border-bottom: 1px solid transparent;

    transition: border-bottom 0.3s, color 0.3s;
    font-size: 32rpx;

    &.active {
      color: #47b248;
      border-bottom: 1px solid #47b248;
    }
  }
}

.main {
  height: calc(100% - 96rpx);
  width: 100%;
  box-sizing: border-box;
  overflow-x: hidden;
  overflow-y: auto;
  position: relative;
}
</style>
<template>
  <view class="container">

    <view wx:if="{{!userCheck}}" class="tips-login-needed">

      <view>
        <image id="loginBtn" src="{{loginImg}}" @tap="handle2Login"></image>
      </view>
      <view>
        <icon style="position: relative; top: 6rpx; margin-right: 16rpx;" type="info" size="16"/><text>您还未登录</text>
      </view>

    </view>

    
    <view class="toolbar" wx:if="{{userCheck}}">
      <view 
        wx:for="{{toolbars}}" 
        class="toolbar-item {{item.checked ? 'active' : ''}}" 
        wx:key="toolbar-item-{{idx}}"
        @tap="handleToolbarChange({{item}})">
        <text>{{item.label}}</text>
      </view>
    </view>

    <scroll-view class="main" wx:if="{{userCheck}}" bindscrolltolower="handleLoadMore">

    </scroll-view>

  </view>
</template>

<script>
import wepy from 'wepy';

import { connect } from 'wepy-redux';

import { getStore } from 'wepy-redux';

@connect(
  {
    userId(state) {
      return state.user.id;
    },
    userCheck(state) {
      return state.user.check;
    },
    orders(state) {
      return state.order.orders;
    }
  },
  {}
)
export default class Order extends wepy.page {
  config = {
    navigationBarTitleText: '我的订单'
  };
  components = {};

  mixins = [];

  data = {
    loginImg: '/assets/imgs/login.png',
    toolbars: [
      { label: '进行中', checked: true, value: [1, 2, 4] },
      { label: '已完成', checked: false, value: [3] },
      { label: '已取消', checked: false, value: [5] }
    ]
  };

  computed = {};

  methods = {
    handle2Login() {
      wepy.navigateTo({
        url: '/pages/login'
      });
    },
    handleToolbarChange(item) {
      this.toolbars.forEach(t => {
        if (t.label === item.label) {
          t.checked = true;
        } else {
          t.checked = false;
        }
      });
    },
    handleLoadMore(){
      console.log('more');
    }
  };

  events = {};

  onLoad() {}
}
</script>
